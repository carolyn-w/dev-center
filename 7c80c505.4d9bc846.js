(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{214:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return r})),t.d(n,"default",(function(){return b}));var o=t(1),i=t(9),a=(t(0),t(279)),p=t(300),s=t(303),m=t(302),c=(t(298),t(297),{title:"App Config for a Component",description:"Geocortex Mobile - Learn how to make a component participate in app config."}),l={id:"mobile/usecases-implement-component-participate-app-config",title:"App Config for a Component",description:"Geocortex Mobile - Learn how to make a component participate in app config.",source:"@site/docs/mobile/usecases-implement-component-participate-app-config.mdx",permalink:"/docs/mobile/usecases-implement-component-participate-app-config",editUrl:"https://github.com/geocortex/dev-center/edit/master/docs/mobile/usecases-implement-component-participate-app-config.mdx",sidebar:"mobile",previous:{title:"Custom Component with UI",permalink:"/docs/mobile/usecases-implement-component-with-ui"},next:{title:"Custom Service",permalink:"/docs/mobile/usecases-implement-service"}},r=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Create a Skeleton App Config Definition",id:"create-a-skeleton-app-config-definition",children:[]},{value:"Consume the Configuration in the Component",id:"consume-the-configuration-in-the-component",children:[]},{value:"Define Configuration Values",id:"define-configuration-values",children:[]},{value:"Relevant SDK Sample",id:"relevant-sdk-sample",children:[]}],u={rightToc:r};function b(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A component can optionally participate in the ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/mobile/concepts-app-config"}),"app config"),". This allows for the component's behavior and initial state to be easily modified without having to deploy custom code. Different instances of the same component type can reference different app config items, allowing for multiple components in the same application with different behavior."),Object(a.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(a.b)("p",null,"Complete the previous use case, ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/mobile/usecases-implement-component-with-ui"}),"Implement a Custom Component")," up to ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/mobile/usecases-implement-component-with-ui#extend-your-component-with-custom-code"}),"Extend your Component with Custom Code"),". This article will extend that component to consume custom app config."),Object(a.b)("h2",{id:"create-a-skeleton-app-config-definition"},"Create a Skeleton App Config Definition"),Object(a.b)("p",null,"Create a new file ",Object(a.b)("inlineCode",{parentName:"p"},"CustomComponentConfiguration.cs"),". This class defines a new app item type ",Object(a.b)("inlineCode",{parentName:"p"},"custom-component-config"),". This app item type will be used as configuration for the ",Object(a.b)("inlineCode",{parentName:"p"},"CustomComponent"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-csharp",metastring:'title="App1/App1/components/CustomComponentConfiguration.cs"',title:'"App1/App1/components/CustomComponentConfiguration.cs"'}),'using App1.Configuration;\nusing Geocortex.API;\nusing Geocortex.Mobile.Infrastructure.App;\nusing System;\n\n// highlight-next-line\n[assembly: AppItem(CustomComponentConfiguration.ConfigItemtype, typeof(CustomComponentConfiguration))]\nnamespace App1.Configuration\n{\n    // highlight-next-line\n    public class CustomComponentConfiguration : VisualAppItem\n    {\n        // highlight-next-line\n        public const string ConfigItemtype = "custom-component-config";\n\n        public string ConfigTitle { get; private set; }\n\n        public string ConfigDescription { get; private set; }\n\n        public CustomComponentConfiguration()\n            : this(Guid.NewGuid().ToString())\n        {\n        }\n\n        public CustomComponentConfiguration(string id)\n            : this(new Properties { ["id"] = id })\n        {\n        }\n\n        public CustomComponentConfiguration(Properties properties) :\n            base(properties, ConfigItemtype)\n        {\n            // properties is an object corresponding to the config defined in the app.json\n            if (properties.TryGetValue("title", out var title))\n            {\n                ConfigTitle = title as string ?? "Default Title";\n            }\n\n            if (properties.TryGetValue("description", out var text))\n            {\n                ConfigDescription = text as string ?? "Default description.";\n            }\n        }\n\n        public override object CreateDefault()\n        {\n            return new CustomComponentConfiguration();\n        }\n    }\n}\n')),Object(a.b)("div",{className:"admonition admonition-info alert alert--info"},Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"The two key components of this snippet are the ",Object(a.b)("inlineCode",{parentName:"p"},"[assembly: AppItem(...)]")," tag and the class extension ",Object(a.b)("inlineCode",{parentName:"p"},"CustomComponentConfiguration : VisualAppItem"),". These two pieces register the configuration with Geocortex Mobile and Autofac."))),Object(a.b)("h2",{id:"consume-the-configuration-in-the-component"},"Consume the Configuration in the Component"),Object(a.b)("p",null,"Components that consume configuration should extend ",Object(a.b)("inlineCode",{parentName:"p"},"AppItemComponentBase<ConfigurationClassType>"),". This forces them to have a constructor which takes in an ",Object(a.b)("inlineCode",{parentName:"p"},"IAppItem")," resolver for the specific configuration type. This resolver can then be called in the ",Object(a.b)("inlineCode",{parentName:"p"},"DoInitializeAsync")," method to retrieve the app config values. They should also register with Autofac using the ",Object(a.b)("inlineCode",{parentName:"p"},"AppItemComponent")," assembly attribute."),Object(a.b)(s.a,{defaultValue:"component",values:[{label:"Component",value:"component"},{label:"View",value:"view"},{label:"Code Behind",value:"code-behind"},{label:"View Model",value:"view-model"}],mdxType:"Tabs"},Object(a.b)(m.a,{value:"component",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-csharp",metastring:'title="App1/App1/components/CustomComponent.cs"',title:'"App1/App1/components/CustomComponent.cs"'}),'using App1;\nusing App1.Components;\nusing App1.Configuration;\nusing Geocortex.Mobile.Infrastructure.App;\nusing Geocortex.Mobile.Infrastructure.Layout;\nusing System.Threading.Tasks;\nusing System.Xml.Linq;\nusing Xamarin.Forms;\n\n// highlight-next-line\n[assembly: AppItemComponent(typeof(CustomComponent), "custom-component", CustomComponentConfiguration.ConfigItemtype, XmlNamespace = XmlNamespaces.App1Namespace)]\nnamespace App1.Components\n{\n    // highlight-next-line\n    class CustomComponent : AppItemComponentBase<CustomComponentConfiguration>\n    {\n        private CustomComponentViewModel _viewModel;\n\n        IAppItem<CustomComponentConfiguration> _appItemResolver;\n\n        public CustomComponent(IAppItem<CustomComponentConfiguration> itemResolver)\n            : base(itemResolver)\n        {\n            _appItemResolver = itemResolver;\n            _viewModel = new CustomComponentViewModel();\n        }\n\n        protected override VisualElement Create(XNode node)\n        {\n            return new CustomComponentView()\n            {\n                BindingContext = _viewModel\n            };\n        }\n\n        protected override async Task DoInitializeAsync()\n        {\n            // highlight-start\n            var item = await _appItemResolver.ResolveAsync();\n            _viewModel.Title = item.ConfigTitle;\n            _viewModel.Description = item.ConfigDescription;\n            // highlight-end\n        }\n    }\n}\n'))),Object(a.b)(m.a,{value:"view",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-xml",metastring:'title="App1/App1/components/CustomComponentView.xaml"',title:'"App1/App1/components/CustomComponentView.xaml"'}),'<?xml version="1.0" encoding="UTF-8"?>\n<ContentView xmlns="http://xamarin.com/schemas/2014/forms"\n             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"\n             xmlns:d="http://xamarin.com/schemas/2014/forms/design"\n             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n             mc:Ignorable="d"\n             x:Class="App1.Components.CustomComponentView">\n    <ContentView.Content>\n        <StackLayout>\n            // highlight-start\n            <Label FontSize="Title" Text="{Binding Title}" />\n            <Label Text="{Binding Description}" />\n            // highlight-end\n        </StackLayout>\n    </ContentView.Content>\n</ContentView>\n'))),Object(a.b)(m.a,{value:"code-behind",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-csharp",metastring:'title="App1/App1/components/CustomComponentView.xaml.cs"',title:'"App1/App1/components/CustomComponentView.xaml.cs"'}),"using App1.Components;\nusing Geocortex.Mobile.Composition;\nusing Xamarin.Forms;\nusing Xamarin.Forms.Xaml;\n\n[assembly: View(typeof(CustomComponentView))]\nnamespace App1.Components\n{\n    [XamlCompilation(XamlCompilationOptions.Compile)]\n    public partial class CustomComponentView : ContentView\n    {\n        public CustomComponentView()\n        {\n            InitializeComponent();\n        }\n    }\n}\n"))),Object(a.b)(m.a,{value:"view-model",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-csharp",metastring:'title="App1/App1/components/CustomComponentViewModel.cs"',title:'"App1/App1/components/CustomComponentViewModel.cs"'}),"using App1.Components;\nusing Geocortex.Mobile.Composition;\nusing Geocortex.Mobile.Composition.Views;\n\n[assembly: ViewModel(typeof(CustomComponentViewModel))]\nnamespace App1.Components\n{\n    public class CustomComponentViewModel : NotifyPropertyBase\n    {\n        private string _title;\n        private string _description;\n\n        public string Title\n        {\n            get => _title;\n            set => SetProperty(ref _title, value);\n        }\n\n        public string Description\n        {\n            get => _description;\n            set => SetProperty(ref _description, value);\n        }\n    }\n}\n")))),Object(a.b)("h2",{id:"define-configuration-values"},"Define Configuration Values"),Object(a.b)("p",null,"At this point, the component is hooked up to configuration, and configuration values can be defined and consumed."),Object(a.b)("p",null,"App Config is defined in the ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/mobile/sdk-edit-layout-app-config"}),"app JSON")," and linked to the component through the ",Object(a.b)("inlineCode",{parentName:"p"},"config")," attribute in layout, just like any other component."),Object(a.b)(s.a,{defaultValue:"layout",values:[{label:"Layout",value:"layout"},{label:"App Config",value:"json"},{label:"User Interface",value:"ui"}],mdxType:"Tabs"},Object(a.b)(m.a,{value:"layout",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-xml",metastring:'title="App1/App1/layout-large.xml"',title:'"App1/App1/layout-large.xml"'}),'<?xml version="1.0" encoding="utf-8" ?>\n<layout\n    xmlns="https://geocortex.com/layout/v1"\n    xmlns:gxm="https://geocortex.com/layout/mobile/v1"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="https://geocortex.com/layout/v1 ../../ViewerFramework/layout/layout-mobile.xsd"\n    // highlight-next-line\n    xmlns:custom="https://your.org/layout/app1">\n    <gxm:taskbar>\n        \x3c!--Taskbar / custom component--\x3e\n        <panel>\n            // highlight-next-line\n            <custom:custom-component icon="warning" config="custom-component-config"/>\n        </panel>\n        <map slot="main"/>\n    </gxm:taskbar>\n</layout>\n'))),Object(a.b)(m.a,{value:"json",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-json",metastring:'title="App1/App1/app.json"',title:'"App1/App1/app.json"'}),'{\n    "$schema": "..\\\\..\\\\ViewerFramework\\\\app-config\\\\mobile\\\\mobile-app-config.schema.json",\n    "schemaVersion": "1.0",\n    "items": [\n        {\n            "$type": "custom-component-config",\n            "id": "custom-component-config",\n            "title": "Title from Config",\n            "description": "This description came from config."\n        },\n        {\n            "$type": "layout",\n            "id": "desktop-layout",\n            "url": "resource://layout-large.xml",\n            "tags": ["mobile", "large"]\n        }\n    ]\n}\n'))),Object(a.b)(m.a,{value:"ui",mdxType:"TabItem"},Object(a.b)("img",{src:Object(p.a)("img/mobile-component-with-configuration.png")}))),Object(a.b)("h2",{id:"relevant-sdk-sample"},"Relevant SDK Sample"),Object(a.b)("p",null,"Check out the relevant Geocortex Mobile SDK Sample:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/geocortex/vertigis-mobile-samples/tree/master/Geocortex.Mobile.Samples/Geocortex.Mobile.Samples/Samples/Custom/ComponentConfiguration"}),"Component with Configuration"))))}b.isMDXComponent=!0},297:function(e,n,t){"use strict";t.d(n,"a",(function(){return c}));var o=t(0),i=t.n(o),a=t(280),p=t.n(a),s=t(130),m=t.n(s);function c(e){var n=e.children;return i.a.createElement("div",{className:p()(m.a.root)},n)}},298:function(e,n,t){"use strict";t.d(n,"a",(function(){return l}));t(295);var o=t(286),i=t(0),a=t.n(i),p=t(280),s=t.n(p),m=t(131),c=t.n(m);function l(e){var n=e.title,t=e.description,i=e.link;return a.a.createElement("div",{className:s()("card-demo",c.a.root)},a.a.createElement("div",{className:"card"},a.a.createElement("div",{className:"card__header"},a.a.createElement("h3",null,n)),a.a.createElement("div",{className:"card__body"},a.a.createElement("p",null,t)),a.a.createElement("div",{className:"card__footer"},a.a.createElement(o.a,{className:"button button--secondary button--block",to:i},"Get Started"))))}}}]);