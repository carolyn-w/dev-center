(globalThis.webpackChunkgeocortex_dev_center=globalThis.webpackChunkgeocortex_dev_center||[]).push([[8349],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>l,kt:()=>p});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=m(n),p=o,f=u["".concat(s,".").concat(p)]||u[p]||d[p]||i;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var m=2;m<i;m++)a[m]=n[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6159:(e,t,n)=>{"use strict";n.d(t,{N:()=>l,Z:()=>d});var r=n(2122),o=n(7294),i=n(6010),a=n(4973),c=n(9732);const s="enhancedAnchor_2LWZ",m="h1Heading_27L5",l=function({...e}){return o.createElement("header",null,o.createElement("h1",(0,r.Z)({},e,{id:void 0,className:m}),e.children))},d=e=>{return"h1"===e?l:(t=e,function({id:e,...n}){const{navbar:{hideOnScroll:r}}=(0,c.LU)();return e?o.createElement(t,n,o.createElement("a",{"aria-hidden":"true",tabIndex:-1,className:(0,i.Z)("anchor",{[s]:!r}),id:e}),n.children,o.createElement("a",{className:"hash-link",href:`#${e}`,title:(0,a.I)({id:"theme.common.headingLinkTitle",message:"Direct link to heading",description:"Title for link to heading"})},"#")):o.createElement(t,n)});var t}},1383:(e,t,n)=>{"use strict";n.d(t,{Z:()=>E});var r=n(7294),o=n(2263);const i=function({children:e,fallback:t}){const{isClient:n}=(0,o.Z)();return n&&null!=e?r.createElement(r.Fragment,null,e()):t||null};var a=n(6159);function c(e){return e.replace("#/definitions/","")}function s(e){return`definition-${c(e)}`}function m(e,t){const n=c(e);if(!n.startsWith("esri.rest-api"))return t.definitions[n]}function l(e){const{isArray:t,name:n,schema:o}=e,i=c(n),a=m(n,o);return a&&"object"===a.type?r.createElement("code",null,r.createElement("a",{href:`#${s(n)}`},i,t&&"[]")):r.createElement("code",null,i,t&&"[]")}function d(e){const{schema:t}=e;let n=e.definition;if("string"==typeof n){const e=m(name,t);console.warn("Couldn't find definition:",n),n=e}if(!n)return r.createElement("div",{style:{fontStyle:"italic"}},"There are no arguments");if(n.$ref){const e=m(n.$ref,t);return e&&"object"!==e.type?r.createElement(d,{definition:e,schema:t}):r.createElement(l,{name:n.$ref,schema:t})}if(n.type){if("string"===n.type&&n.enum){const e=n.enum.map((e=>`"${e}"`)).join(" | ");return r.createElement("code",null,e)}if("array"===n.type&&n.items){const e=e=>r.createElement(r.Fragment,null,e.map(((e,n)=>r.createElement("div",{key:`${e.$ref}-${n}`||n},r.createElement(d,{definition:e,schema:t}),"[]"))));if(Array.isArray(n.items))return e(n.items);if(Array.isArray(n.items.anyOf))return e(n.items.anyOf);if(n.items.$ref){const e=n.items.$ref;return r.createElement(l,{isArray:!0,name:e,schema:t})}return r.createElement("code",null,n.items.type,"[]")}if("object"===n.type)return r.createElement("code",null,"unknown");if(Array.isArray(n.type)){const e=n.type.filter((e=>"null"!==e));return 0===e.length?null:1===e.length?r.createElement("code",null,e[0]):r.createElement(r.Fragment,null,e.map((e=>r.createElement("div",{key:e},r.createElement("code",null,e)))))}return r.createElement("code",null,n.type)}if(n.anyOf){const e=n.anyOf.filter((e=>!("null"===e.type)));return r.createElement(r.Fragment,null,e.length>1&&r.createElement("div",null,"Any of:"),e.map(((e,n)=>r.createElement("div",{key:`${e.$ref}-${n}`||n},r.createElement(d,{definition:e,schema:t})))))}return r.createElement("code",null,"unknown")}const u=(0,a.Z)("h3");function p(e){return!!e.$ref}function f(e){var t,n;return(null==e||null==(t=e.type)?void 0:t.includes("null"))||(null==e||null==(n=e.anyOf)?void 0:n.some(f))}function v(e){var t,n;const{schema:o,type:i}=e,a=o.definitions;let s;s="command"===i?"viewer-spec.SingleCommand":"operation"===i?"viewer-spec.SingleOperation":"viewer-spec.Event";const m=null==(t=a[s])||null==(n=t.anyOf)?void 0:n.filter(p).map((e=>c(e.$ref)));return m?r.createElement(r.Fragment,null,m.map((e=>{const t=a[e],n=function(e,t){return`${t}-${e}`}(e,i),c=a[`${e}:input`],s=a[`${e}:output`];return t?r.createElement("div",{key:e,className:"margin-bottom--lg"},r.createElement(u,{id:n},e),t.description&&r.createElement("div",{className:"margin-bottom--md"},t.description),r.createElement("div",{className:"margin-bottom--md"},r.createElement("div",null,"Argument "+(!0===f(c)?"(optional)":"")),r.createElement("div",{className:"margin-left--sm"},r.createElement(d,{definition:c,schema:o}))),"operation"===i&&s&&r.createElement(r.Fragment,null,r.createElement("div",null,"Result"),r.createElement("div",{className:"margin-left--sm"},r.createElement(d,{definition:s,schema:o})))):null}))):null}const h=(0,a.Z)("h3");function g(e){const{definitionName:t,schema:n}=e,o=c(t),i=m(t,n);if(!i)return null;if("object"!==i.type)return console.warn("Tried to render definition for non-object type",o),null;const a=s(o);return r.createElement("div",{className:"margin-bottom--lg"},r.createElement(h,{id:a},o),i.description&&r.createElement("div",{className:"margin-bottom--md"},i.description),r.createElement("div",null,"Properties"),(!i.properties||0===Object.keys(i.properties).length)&&r.createElement("em",null,"This object doesn't currently contain any properties."),i.properties&&r.createElement("div",{className:"margin-left--sm"},Object.entries(i.properties).map((([e,t])=>{var o;return r.createElement("div",{key:e,className:"margin-bottom--md"},r.createElement("div",{className:"margin-bottom--sm"},r.createElement("code",null,e),(null==(o=i.required)?void 0:o.includes(e))&&r.createElement("span",{className:"badge badge--secondary"},"Required")),r.createElement("div",{className:"margin-left--sm"},r.createElement(d,{definition:t,schema:n}),t.description&&r.createElement("div",{className:"margin-top--sm"},t.description)))}))))}function y(e){const{schema:t}=e,n=Object.entries(t.definitions).reduce(((e,[t,n])=>"object"===n.type?{...e,[t]:n}:e),{});return r.createElement("div",null,Object.keys(n).sort(((e,t)=>e.localeCompare(t))).map((e=>r.createElement(g,{key:e,definitionName:e,schema:t}))))}function b(e){const{schema:t,type:n}=e;return r.createElement(r.Fragment,null,("argument"===n||"config"===n)&&r.createElement(y,{schema:t}),"command"===n&&r.createElement(v,{schema:t,type:"command"}),"event"===n&&r.createElement(v,{schema:t,type:"event"}),"operation"===n&&r.createElement(v,{schema:t,type:"operation"}))}function E(e){return i({children:()=>r.createElement(O,e)})}const w={web:{action:void 0,event:void 0,config:void 0},mobile:{action:void 0,event:void 0,config:void 0},common:{action:void 0,event:void 0,config:void 0}};function O(e){const{product:t,type:n}=e,[o,i]=(0,r.useState)();return(0,r.useEffect)((()=>{let e,r=!1;switch(n){case"command":case"operation":e="action";break;case"event":e="event";break;case"config":e="config"}return(async()=>{e&&!w[t][e]&&("config"===n?(w.common[e]=fetch("https://apps.geocortex.com/webviewer/common-app-config.schema.json"),w[t][e]=fetch(`https://apps.geocortex.com/webviewer/${t}-app-config.schema.json`)):w[t][e]=fetch(`https://apps.geocortex.com/webviewer/${t}-${e}.schema.json`));const o=[];if("config"===e){const e=await w.common.config,n=await w[t].config,r=await e.clone().json(),i=await n.clone().json();o.push(r),o.push(i)}else{const e=await w[t].action,n=await w[t].event,r=await e.clone().json(),i=await n.clone().json();o.push(r),o.push(i)}if(r)return;const a={$ref:"#/definitions/viewer-spec.ActionObject"},c={type:"string"},s={definitions:"config"!==n?{"viewer-spec.ActionObject":{properties:{name:{description:"The name of a command or operation.",type:"string"},arguments:{description:"The arguments for the command or operation.",type:"object"}},required:["name","arguments"],type:"object"},"viewer-spec.Action":{description:`An action to execute in the viewer; can be an action name, an action object, or a command chain (https://developers.geocortex.com/docs/${t}/configuration-commands-operations/#command-chains). The list of valid action names are the names of the commands and operations listed in this document`,anyOf:[c,a,{items:{anyOf:[c,a]},type:"array"}]}}:{}};o.forEach((e=>{Object.keys(e.definitions).forEach((t=>{s.definitions[t]=e.definitions[t]}))})),i(s)})(),()=>{r=!0}}),[t]),(0,r.useEffect)((()=>{if(!o)return;const e=window.decodeURIComponent(window.location.hash);var t;e&&(null==(t=document.getElementById(e.substring(1)))||t.scrollIntoView())}),[o]),o?r.createElement(b,{schema:o,type:n}):r.createElement("div",null,"Loading...")}},1718:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>a,contentTitle:()=>c,metadata:()=>s,toc:()=>m,default:()=>d});var r=n(2122),o=(n(7294),n(3905)),i=n(1383);const a={title:"Commands, Operations and Events Reference",description:"Geocortex Mobile - Commands, Operations and Events API Reference"},c=void 0,s={unversionedId:"mobile/api-commands-operations-events",id:"mobile/api-commands-operations-events",isDocsHomePage:!1,title:"Commands, Operations and Events Reference",description:"Geocortex Mobile - Commands, Operations and Events API Reference",source:"@site/docs/mobile/api-commands-operations-events.mdx",sourceDirName:"mobile",slug:"/mobile/api-commands-operations-events",permalink:"/docs/mobile/api-commands-operations-events",editUrl:"https://github.com/geocortex/dev-center/edit/master/docs/mobile/api-commands-operations-events.mdx",version:"current",frontMatter:{title:"Commands, Operations and Events Reference",description:"Geocortex Mobile - Commands, Operations and Events API Reference"},sidebar:"mobile",previous:{title:"Build a Service that Fetches Dynamic Data",permalink:"/docs/mobile/tutorial-implement-service-fetch-dynamic-data"},next:{title:"Components and Services",permalink:"/docs/mobile/api-components"}},m=[{value:"Commands",id:"commands",children:[]},{value:"Operations",id:"operations",children:[]},{value:"Events",id:"events",children:[]},{value:"Argument Definitions",id:"argument-definitions",children:[]}],l={toc:m};function d({components:e,...t}){return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Commands and operations are runnable, independent units of work within Geocortex Mobile. ",(0,o.kt)("a",{parentName:"p",href:"#commands"},"Commands")," are units of work which may take an input but do not produce an output, while ",(0,o.kt)("a",{parentName:"p",href:"#operations"},"operations")," differ because they produce output. You can learn more about commands and operations in our ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/configuration-commands-operations"},"conceptual documentation")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#events"},"Events")," are distinct, discrete messaging about a change or update that occurs in the viewer. They can be used to initiate behaviors, communicate data changes, and more. Events themselves do not execute behavior, but merely provide messaging so subscribers can act on changes. You can learn more about events in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/sdk-events-reference"},"event reference")),(0,o.kt)("h2",{id:"commands"},"Commands"),(0,o.kt)(i.Z,{product:"mobile",type:"command",mdxType:"ViewerMessaging"}),(0,o.kt)("h2",{id:"operations"},"Operations"),(0,o.kt)(i.Z,{product:"mobile",type:"operation",mdxType:"ViewerMessaging"}),(0,o.kt)("h2",{id:"events"},"Events"),(0,o.kt)(i.Z,{product:"mobile",type:"event",mdxType:"ViewerMessaging"}),(0,o.kt)("h2",{id:"argument-definitions"},"Argument Definitions"),(0,o.kt)(i.Z,{product:"mobile",type:"argument",mdxType:"ViewerMessaging"}))}d.isMDXComponent=!0}}]);